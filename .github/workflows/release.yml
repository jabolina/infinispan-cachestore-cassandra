name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The Cassandra cachestore branch to checkout when cutting the release."
        required: true
        default: "main"
      releaseVersion:
        description: "Release version."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Next development version."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set release version
        run: |
          mvn -B versions:update-parent "-DparentVersion=[${{ github.event.inputs.releaseVersion }}]" -DprocessAllModules=true
          mvn -B versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -DprocessAllModules=true
          mvn -B versions:commit

      - name: Set up Java for publishing to OSSRH
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Configure Git User
        run: |
          git config user.email "jbolina@redhat.com"
          git config user.name "jabolina"

      - name: Tag Release
        run: git tag ${{ github.event.inputs.releaseVersion }}

      - name: Next Version
        run: |
          mvn -B versions:update-parent "-DparentVersion=[${{ github.event.inputs.developmentVersion }}]" -DprocessAllModules=true
          mvn -B versions:set -DnewVersion=${{ github.event.inputs.developmentVersion }} -DprocessAllModules=true
          mvn -B versions:commit
          git commit -a -m "Next version ${{ github.event.inputs.nextVersion }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.branch }}
          tags: true

      - id: release
        name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
